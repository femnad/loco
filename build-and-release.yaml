---
- hosts: loco
  name: Build loco binaries

  vars:
    message_file: release.txt
    version: '{{ version_cmd.stdout }}'
    binaries:
      - bakl
      - clom
      - tosm
      - ysnp
      - zenv

  tasks:
    - name: Get version
      shell: "grep -E '^version: [0-9.]+$' shard.yml | awk '{print $2}'"
      register: version_cmd

    - name: Build the image
      docker_image:
        build:
          args:
            version: '{{ version }}'
          nocache: '{{ nocache | default(omit) }}'
          path: .
          pull: true
        name: loco:{{ version }}
        source: build

    - name: Run the image
      docker_container:
        image: loco:{{ version }}
        name: loco
        entrypoint: cat
        tty: true

    - name: Ensure directory for binaries
      file:
        name: bin
        state: directory

    - name: Copy the binaries
      command: docker cp loco:/root/loco/{{ item }} bin
      loop: '{{ binaries }}'

    - name: Copy the binaries to home bin
      command: docker cp loco:/root/loco/{{ item }} {{ ansible_user_dir }}/bin
      loop: '{{ binaries }}'
      tags: homebin

    - name: Stop the container
      docker_container:
        state: absent
        name: loco

    - name: Check existing versions
      shell: git tag | grep {{ version }}
      register: exists
      failed_when: exists.rc not in [0, 1]
      tags: release

    - name: Tag the version
      command: git tag {{ version }}
      when: exists.rc == 1
      tags: release

    - name: Push the tags
      command: git push --tags
      tags: release

    - name: Build the message file
      shell: |
        echo -e "{{ version }}\n" > {{ message_file }}
        for binary in {{ ' '.join(binaries) }}
        do
          echo "$binary: $(sha256sum bin/$binary | awk '{print $1}')" >> {{ message_file }}
        done
      tags: release

    - name: Create a release
      command: hub release create {{ '-a bin/' + ' -a bin/'.join(binaries) }} -F release.txt {{ version }}
      tags: release

    - name: Remove the message file
      file:
        name: '{{ message_file }}'
        state: absent
      tags: release
...
