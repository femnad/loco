---
- hosts: loco
  name: Build loco binaries

  vars:
    message_file: release.txt
    version: '{{ version_cmd.stdout }}'
    binaries:
      - bakl
      - tosm
      - ysnp
      - zenv

  tasks:
    - name: Get version
      shell: grep version shard.yml | awk '{print $2}'
      register: version_cmd

    - name: Build the image
      docker_image:
        build:
          path: .
          pull: no
        name: loco:{{ version }}
        source: build

    - name: Run the image
      docker_container:
        image: loco:{{ version }}
        name: loco
        entrypoint: cat
        tty: true

    - name: Ensure directory for binaries
      file:
        name: bin
        state: directory

    - name: Copy the binaries
      command: docker cp loco:/root/loco/{{ item }} bin
      loop: '{{ binaries }}'

    - name: Stop the container
      docker_container:
        state: absent
        name: loco

    - name: Check existing versions
      shell: git tag | grep 0.3.0
      register: exists
      failed_when: exists.rc not in [0, 1]

    - name: Tag the version
      command: git tag {{ version }}
      when: exists.rc == 1

    - name: Push the tags
      command: git push --tags

    - name: Build the message file
      shell: |
        echo "{{ version }}\n" > {{ message_file }}
        for binary in {{ ' '.join(binaries) }}
        do
          echo "$binary: $(sha256sum bin/$binary | awk '{print $1}')" >> {{ message_file }}
        done

    - name: Create a release
      command: hub release create {{ '-a bin/' + ' -a bin/'.join(binaries) }} -F release.txt {{ version }}

    - name: Remove the message file
      file:
        name: '{{ message_file }}'
        state: absent
...
